/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export const __wbg_typstcompiler_free: (a: number, b: number) => void;
export const get_font_info: (a: number) => number;
export const typstcompiler_reset: (a: number, b: number) => void;
export const typstcompiler_set_inputs: (a: number, b: number, c: number) => void;
export const typstcompiler_add_source: (a: number, b: number, c: number, d: number, e: number) => number;
export const typstcompiler_map_shadow: (a: number, b: number, c: number, d: number, e: number) => number;
export const typstcompiler_unmap_shadow: (a: number, b: number, c: number) => number;
export const typstcompiler_reset_shadow: (a: number) => void;
export const typstcompiler_get_loaded_fonts: (a: number, b: number) => void;
export const typstcompiler_get_ast: (a: number, b: number, c: number, d: number) => void;
export const typstcompiler_get_semantic_token_legend: (a: number, b: number) => void;
export const typstcompiler_get_semantic_tokens: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => void;
export const typstcompiler_get_artifact: (a: number, b: number, c: number, d: number, e: number) => void;
export const typstcompiler_set_compiler_options: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const typstcompiler_query: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number) => void;
export const typstcompiler_compile: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
export const typstcompiler_create_incr_server: (a: number, b: number) => void;
export const typstcompiler_incr_compile: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => void;
export const __wbg_typstcompilerbuilder_free: (a: number, b: number) => void;
export const typstcompilerbuilder_new: (a: number) => void;
export const typstcompilerbuilder_set_dummy_access_model: (a: number, b: number) => void;
export const typstcompilerbuilder_set_access_model: (a: number, b: number, c: number, d: number, e: number, f: number) => number;
export const typstcompilerbuilder_set_package_registry: (a: number, b: number, c: number) => number;
export const typstcompilerbuilder_add_raw_font: (a: number, b: number) => number;
export const typstcompilerbuilder_add_web_fonts: (a: number, b: number) => number;
export const typstcompilerbuilder_build: (a: number) => number;
export const __wbg_incrserver_free: (a: number, b: number) => void;
export const incrserver_set_attach_debug_info: (a: number, b: number) => void;
export const incrserver_current: (a: number, b: number) => void;
export const incrserver_reset: (a: number) => void;
export const __wbg_proxycontext_free: (a: number, b: number) => void;
export const proxycontext_new: (a: number) => number;
export const proxycontext_context: (a: number) => number;
export const proxycontext_untar: (a: number, b: number, c: number, d: number, e: number) => void;
export const qcms_transform_data_rgb_out_lut_precache: (a: number, b: number, c: number, d: number) => void;
export const qcms_transform_data_rgba_out_lut_precache: (a: number, b: number, c: number, d: number) => void;
export const qcms_transform_data_bgra_out_lut_precache: (a: number, b: number, c: number, d: number) => void;
export const qcms_transform_data_rgb_out_lut: (a: number, b: number, c: number, d: number) => void;
export const qcms_transform_data_rgba_out_lut: (a: number, b: number, c: number, d: number) => void;
export const qcms_transform_data_bgra_out_lut: (a: number, b: number, c: number, d: number) => void;
export const qcms_transform_release: (a: number) => void;
export const qcms_profile_precache_output_transform: (a: number) => void;
export const qcms_enable_iccv4: () => void;
export const qcms_profile_is_bogus: (a: number) => number;
export const qcms_white_point_sRGB: (a: number) => void;
export const lut_interp_linear16: (a: number, b: number, c: number) => number;
export const lut_inverse_interp16: (a: number, b: number, c: number) => number;
export const __wbindgen_export_0: (a: number) => void;
export const __wbindgen_export_1: (a: number, b: number, c: number) => void;
export const __wbindgen_export_2: (a: number, b: number) => number;
export const __wbindgen_export_3: (a: number, b: number, c: number, d: number) => number;
export const __wbindgen_export_4: WebAssembly.Table;
export const __wbindgen_add_to_stack_pointer: (a: number) => number;
export const __wbindgen_export_5: (a: number, b: number, c: number) => void;
export const __wbindgen_export_6: (a: number, b: number, c: number, d: number) => void;
